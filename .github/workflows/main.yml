name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'doctors/**'
      - 'appointments/**'
      - 'frontend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'doctors/**'
      - 'appointments/**'
      - 'frontend/**'

jobs:
  build-and-deploy-doctors:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Get list of modified files
        id: get-modified-files
        run: |
          echo '{
            "commits": [
              {
                "modified": [
                  "doctors/*"
                ]
              }
            ]
          }' > commits.json
          jq -r '.commits[].modified[]' commits.json > modified-files.txt

      - name: Build and push Doctors microservice
        if: contains(steps.get-modified-files.outputs.modified_files, 'doctors/')
        uses: docker/build-push-action@v2
        with:
          context: ./doctors
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/doctors-app:${{ github.sha }}

      - name: Update docker-compose file
        if: contains(steps.get-modified-files.outputs.modified_files, 'doctors/')
        run: |
            sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/doctors-app:${{ github.sha }}|" Docker-compose.yml
            git add Docker-compose.yml
            git commit -m "Update docker-compose file with new image tag"
            git push

  build-and-deploy-appointments:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Get list of modified files
        id: get-modified-files
        run: |
          echo '{
            "commits": [
              {
                "modified": [
                  "appointments/*"
                ]
              }
            ]
          }' > commits.json
          jq -r '.commits[].modified[]' commits.json > modified-files.txt
          steps.get-modified-files.outputs.modified_files

      - name: Build and push Appointments microservice
        if: contains(steps.get-modified-files.outputs.modified_files, 'appointments/')
        uses: docker/build-push-action@v2
        with:
          context: ./appointments
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/appointments-app:${{ github.sha }}

      - name: Update docker-compose file
        if: contains(steps.get-modified-files.outputs.modified_files, 'appointments/')
        run: |
            sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/appointments-app:${{ github.sha }}|" Docker-compose.yml
            git add Docker-compose.yml
            git commit -m "Update docker-compose file with new image tag"
            git push

  build-and-deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Get list of modified files
        id: get-modified-files
        run: |
          echo '{
            "commits": [
              {
                "modified": [
                  "frontend/*"
                ]
              }
            ]
          }' > commits.json
          jq -r '.commits[].modified[]' commits.json > modified-files.txt

      - name: Build and push Frontend microservice
        if: contains(steps.get-modified-files.outputs.modified_files, 'frontend/')
        uses: docker/build-push-action@v2
        with:
            context: ./frontend
            push : true
            tags: |
                ${{ secrets.DOCKER_USERNAME }}/frontend-app:${{ github.sha }}
  

      - name: Update docker-compose file
        if: contains(steps.get-modified-files.outputs.modified_files, 'frontend/')
        run: |
            sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/frontend-app:${{ github.sha }}|" Docker-compose.yml
            git add Docker-compose.yml
            git commit -m "Update docker-compose file with new image tag"
            git push
